1. Example Description
    This application demonstrates the usage of a subset of Real Time Drivers that are included in this code drop. It is not part of the production code deliverables.
    The application includes a Design Studio project, that uses predefined configurations for the IP layer only (Clock, IntCtrl and Wdog).
    The application uses the IP layer functionality to trigger a timer interrupt every 1s.
    1.1 The application software functionality
            - Clock_Ip_Init
                    Initialize the clock sources, the clock tree and to configure the clock gating of the peripherals.
                    The clock configuration that is used will enable and use the PLL as source clock.
            - Wdog_Ip_Init, Wdog_Ip_Service & Wdog_Ip_Deinit
                    The examples use Wdog_Ip_Service function to feed Wdog timer counter.
                    Perform servicing before the WDOG timeout expired .
                    WDOG will be de-initialized after performing 50 times WDOG service.
            - The status of execution running the example is successful if there is no dev assert error detected and the board is not reset.

2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - S32K116EVB2-Q048
            - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
            - 1 Micro USB cable
        2.2.2 Connections
        2.2.3 Debugger
         
3. Generating, building and running the example application
    3.1 Generating the S32 configuration
        Before running the example a configuration needs to be generated.  First go to Project Explorer View in S32 DS and select the current project. Select the "S32 Configuration Tool" menu then click on the desired configuration tool (Pins, Cocks, Peripherals etc...). Clicking on any one of those will generate all the components. Make the desired changes(if any) then click on the "S32 Configuration Tool->Update Code" button.
    3.2 Compiling the application
        Select the configuration to be built: FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the build button in eclipse. 
        Use Project > Build to build the project.
        Wait for the build action to be completed before continuing to the next step. Check the compiler console for error messages; upon completion, the *.elf binary file
        should be created.
    3.2 Running the application on the board
        Go to Run and select Debug Configurations. There will be a debug configuration for this project:
        
        Configuration Name                         |     Description
        -------------------------------------------------------------------------------------------
        Wdog_Ip_Example_S32K118_Debug_FLASH_PNE    | Debug the FLASH configuration using PnE Debugger
        
        Select the desired debug configuration and click on Launch. Now the perspective will change to the Debug Perspective.
        Use the controls to control the program flow.